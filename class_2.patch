diff --git a/runtime/Cargo.toml b/runtime/Cargo.toml
index ab3f099..8cfd7b9 100644
--- a/runtime/Cargo.toml
+++ b/runtime/Cargo.toml
@@ -51,6 +51,9 @@ hex-literal = { version = "0.3.4", optional = true }
 # Local Dependencies
 pallet-template = { version = "4.0.0-dev", default-features = false, path = "../pallets/template" }
 
+# Used for pallet-nicks
+pallet-nicks = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18", version = "4.0.0-dev" }
+
 [build-dependencies]
 substrate-wasm-builder = { version = "5.0.0-dev", git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.18" }
 
@@ -65,6 +68,7 @@ std = [
 	"frame-system/std",
 	"pallet-aura/std",
 	"pallet-balances/std",
+	'pallet-nicks/std',
 	"pallet-grandpa/std",
 	"pallet-randomness-collective-flip/std",
 	"pallet-sudo/std",
diff --git a/runtime/src/lib.rs b/runtime/src/lib.rs
index 93cf234..6b9cc6a 100644
--- a/runtime/src/lib.rs
+++ b/runtime/src/lib.rs
@@ -249,6 +249,31 @@ impl pallet_balances::Config for Runtime {
 	type WeightInfo = pallet_balances::weights::SubstrateWeight<Runtime>;
 }
 
+parameter_types! {
+	// Fees required to keep track of account names on-chain
+	pub const NickReservationFee: u128 = 100;
+	// min and max length of nicks
+	pub const MinNickLength: u32 = 8;
+	pub const MaxNickLength: u32 = 32;
+}
+
+impl pallet_nicks::Config for Runtime {
+	type Currency = Balances;
+
+	// Params from const above
+	type ReservationFee = NickReservationFee;
+	type MinLength = MinNickLength;
+	type MaxLength = MaxNickLength;
+
+	// Based on docs, No action is taken when deposits are forefeited.
+	type Slashed =  ();
+
+	// Configure the FRAME System Root origin as the Nick pallet admin.
+    // https://docs.substrate.io/rustdocs/latest/frame_system/enum.RawOrigin.html#variant.Root
+	type ForceOrigin = frame_system::EnsureRoot<AccountId>;
+	type Event = Event;
+}
+
 parameter_types! {
 	pub const TransactionByteFee: Balance = 1;
 }
@@ -288,6 +313,8 @@ construct_runtime!(
 		Sudo: pallet_sudo,
 		// Include the custom logic from the pallet-template in the runtime.
 		TemplateModule: pallet_template,
+		// Including nicks pallet
+		Nicks: pallet_nicks::{Pallet, Call, Storage, Event<T>},
 	}
 );
 
